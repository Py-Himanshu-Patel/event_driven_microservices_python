version: '3.8'                  # give any version number > 3
services:                       # define all services or containers we need to run using this docker compose

  backend:                      # one service/container is backend
    build:                      # build docker container from image or dockerfile
      context: .                # path to dockerfile
      dockerfile: Dockerfile    # name of dockerfile
    ports:
      - 8000:8000               # hostport : container port
    volumes:
      - .:/src                  # map the code from host to container
    command: 'python manage.py runserver 0.0.0.0:8000'
    hostname: "adminApp"
    networks:
      - rabbitmq
      - default
    depends_on:
      - db

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    command: "python -u consumer.py"
    restart: on-failure
    volumes:
      - .:/src                  # map the code from host to container
    depends_on:
      - backend
      - db
    networks:
      - rabbitmq                # because 
      - default

  db:
    image: mysql:8              # choose mysql image version
    restart: always             # restart the container if stopped
    command: --default-authentication-plugin=mysql_native_password  # to enable password authentication
    environment:
      MYSQL_DATABASE: admin
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - .dbdata:/var/lib/mysql  # map the data from host to container
    ports:
      - 33066:3306              # choose some other port on host, prevent confict with local mysql
    networks:
      - default

networks:
  rabbitmq:
    external:
      name: rabbitmq_network
  default:
    name: admin_default
